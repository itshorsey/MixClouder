{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mix = ({\n  name,\n  url\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Mix;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchMixCloud = async mixSearchTerm => {\n      try {\n        const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`);\n        const {\n          data\n        } = await response.json();\n        console.log(data); // this.mixLists(data)\n        // const response = await fetch('https://api.are.na/v2/channels/test-channel-kecfu5msrfs')\n        // const { contents} = await response.json();\n        // console.log(data);\n\n        this.mixLists(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.stationRoundUp = () => {\n      const radioStations = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\", \"n\"];\n      radioStations.map(station => {\n        this.searchMixCloud(station);\n      });\n    };\n\n    this.mixLists = mix => {\n      mix.map(el => {\n        const {\n          name,\n          url,\n          pictures,\n          tags,\n          user\n        } = el;\n        this.setState((prevState, props) => ({ ...prevState,\n          mixes: [...prevState.mixes, {\n            name: name,\n            url: url,\n            image: pictures[\"640wx640h\"],\n            tags: tags,\n            user: user[\"name\"]\n          }]\n        }));\n      });\n    };\n\n    this.state = {\n      mixes: []\n    };\n  }\n\n  componentDidMount() {\n    //this.searchMixCloud(\"ntsradio\")\n    this.stationRoundUp();\n  }\n\n  render() {\n    const {\n      mixes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      onLoad: this.searchMixes,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex flex-wrap\",\n        children: mixes.map(mix => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outline w-25 mb3 pa3 mr2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: mix.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: mix.url,\n              children: mix.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mix.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mix\");","map":{"version":3,"sources":["/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js"],"names":["Component","Mix","name","url","App","constructor","props","searchMixCloud","mixSearchTerm","response","fetch","data","json","console","log","mixLists","error","stationRoundUp","radioStations","map","station","mix","el","pictures","tags","user","setState","prevState","mixes","image","state","componentDidMount","render","searchMixes"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\n\nconst Mix = ({name, url}) => (\n  <div>\n    <h2>{name}</h2>\n    <p>{url}</p>\n  </div>\n)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mixes: []\n    }\n  }\n\n  componentDidMount() {\n    //this.searchMixCloud(\"ntsradio\")\n    this.stationRoundUp()\n  }\n\n  searchMixCloud = async (mixSearchTerm) => {\n    try {\n      const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`)\n      const { data } = await response.json();\n      console.log(data)\n      // this.mixLists(data)\n      // const response = await fetch('https://api.are.na/v2/channels/test-channel-kecfu5msrfs')\n      // const { contents} = await response.json();\n      // console.log(data);\n      \n      this.mixLists(data)\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n\n  stationRoundUp = () => {\n    const radioStations = [\n      \"balamii\",\n      \"CashmereRadio\",\n      \"dazed\",\n      \"hotelradioparis\",\n      \"n\",\n    ]\n\n    radioStations.map((station) => {\n      this.searchMixCloud(station)\n    })\n  }\n\n  mixLists = (mix) => {\n    mix.map((el) => {\n      const {name, url, pictures, tags, user} = el\n      this.setState((prevState, props) => ({\n        ...prevState,\n        mixes: [...prevState.mixes, { name: name, url: url, image: pictures[\"640wx640h\"], tags: tags, user: user[\"name\"]}]\n      }))\n    })\n  }\n\n\n\n  render() {\n    const {mixes} = this.state\n\n    return (\n      <div className=\"App\" onLoad={this.searchMixes}>\n        <section className=\"flex flex-wrap\">\n        {mixes.map(mix => (\n          <div className=\"outline w-25 mb3 pa3 mr2\">\n          <img src={mix.image} />\n          <h4>\n            <a href={mix.url}>\n              {mix.name}\n            </a>\n          </h4>\n          <p>{mix.user}</p>\n          </div>\n        ))}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}