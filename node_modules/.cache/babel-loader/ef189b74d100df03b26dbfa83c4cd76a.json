{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mix = ({\n  name,\n  url\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Mix;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchMixCloud = async mixSearchTerm => {\n      try {\n        const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`);\n        const {\n          data\n        } = await response.json(); // this.mixLists(data)\n        // const response = await fetch('https://api.are.na/v2/channels/test-channel-kecfu5msrfs')\n        // const { contents} = await response.json();\n        // console.log(data);\n\n        this.mixLists(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.mixLists = mix => {\n      mix.map(el => {\n        const {\n          name,\n          url\n        } = el;\n        this.setState((prevState, props) => ({ ...prevState,\n          mixes: [...prevState.mixes, {\n            name: name,\n            url: url\n          }]\n        }));\n      });\n    };\n\n    let radioStations = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\"];\n    this.state = {\n      mixes: []\n    };\n  }\n\n  componentDidMount() {\n    this.searchMixCloud(\"ntsradio\");\n  }\n\n  render() {\n    const {\n      mixes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      onLoad: this.searchMixes,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), mixes.map(mix => /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: mix.url,\n          children: mix.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mix\");","map":{"version":3,"sources":["/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js"],"names":["Component","Mix","name","url","App","constructor","props","searchMixCloud","mixSearchTerm","response","fetch","data","json","mixLists","error","console","log","mix","map","el","setState","prevState","mixes","radioStations","state","componentDidMount","render","searchMixes"],"mappings":";;AACA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,kBACV;AAAA,0BACE;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,G;;AAON,MAAMG,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,cAjBmB,GAiBF,MAAOC,aAAP,IAAyB;AACxC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2BF,aAAc,cAA3C,CAA5B;AACA,cAAM;AAAEG,UAAAA;AAAF,YAAW,MAAMF,QAAQ,CAACG,IAAT,EAAvB,CAFE,CAGF;AACA;AACA;AACA;;AACA,aAAKC,QAAL,CAAcF,IAAd;AACD,OARD,CAQE,OAAMG,KAAN,EAAa;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KA7BkB;;AAAA,SAiCnBD,QAjCmB,GAiCPI,GAAD,IAAS;AAClBA,MAAAA,GAAG,CAACC,GAAJ,CAASC,EAAD,IAAQ;AACd,cAAM;AAACjB,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAcgB,EAApB;AACA,aAAKC,QAAL,CAAc,CAACC,SAAD,EAAYf,KAAZ,MAAuB,EACnC,GAAGe,SADgC;AAEnCC,UAAAA,KAAK,EAAE,CAAC,GAAGD,SAAS,CAACC,KAAd,EAAqB;AAAEpB,YAAAA,IAAI,EAAEA,IAAR;AAAcC,YAAAA,GAAG,EAAEA;AAAnB,WAArB;AAF4B,SAAvB,CAAd;AAID,OAND;AAOD,KAzCkB;;AAEjB,QAAIoB,aAAa,GAAG,CAClB,SADkB,EAElB,eAFkB,EAGlB,OAHkB,EAIlB,iBAJkB,CAApB;AAMA,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,cAAL,CAAoB,UAApB;AACD;;AA8BDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA;AAAD,QAAU,KAAKE,KAArB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,MAAM,EAAE,KAAKG,WAAlC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,KAAK,CAACJ,GAAN,CAAUD,GAAG,iBACZ;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEA,GAAG,CAACd,GAAb;AAAA,oBACGc,GAAG,CAACf;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7DyB;;AAgE5B,eAAeE,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\n\nconst Mix = ({name, url}) => (\n  <div>\n    <h2>{name}</h2>\n    <p>{url}</p>\n  </div>\n)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let radioStations = [\n      \"balamii\",\n      \"CashmereRadio\",\n      \"dazed\",\n      \"hotelradioparis\",\n    ];\n    this.state = {\n      mixes: []\n    }\n  }\n\n  componentDidMount() {\n    this.searchMixCloud(\"ntsradio\")\n  }\n\n  searchMixCloud = async (mixSearchTerm) => {\n    try {\n      const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`)\n      const { data } = await response.json();\n      // this.mixLists(data)\n      // const response = await fetch('https://api.are.na/v2/channels/test-channel-kecfu5msrfs')\n      // const { contents} = await response.json();\n      // console.log(data);\n      this.mixLists(data)\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  \n\n  mixLists = (mix) => {\n    mix.map((el) => {\n      const {name, url} = el\n      this.setState((prevState, props) => ({\n        ...prevState,\n        mixes: [...prevState.mixes, { name: name, url: url}]\n      }))\n    })\n  }\n\n\n\n  render() {\n    const {mixes} = this.state\n    \n    return (\n      <div className=\"App\" onLoad={this.searchMixes}>\n        <h1>Hi</h1>\n        {mixes.map(mix => (\n          <h2>\n            <a href={mix.url}>\n              {mix.name}\n            </a>\n          </h2>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}