{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mix = ({\n  name,\n  url\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Mix;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchMixCloud = async mixSearchTerm => {\n      try {\n        // const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`)\n        // const { data } = await response.json();\n        // this.mixLists(data)\n        const response = await fetch('https://api.are.na/v2/channels/listen-xezr5yu6rnw');\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.mixLists = mix => {\n      mix.map(el => {\n        const {\n          name,\n          url\n        } = el;\n        console.log(el);\n      });\n    };\n\n    let radioStations = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\"];\n    this.state = {\n      mixes: []\n    };\n  }\n\n  componentDidMount() {\n    this.searchMixCloud(\"ntsradio\");\n  }\n\n  render() {\n    const {\n      mixes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      onLoad: this.searchMixes,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), mixes.map(mix => /*#__PURE__*/_jsxDEV(Mix, { ...mix\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mix\");","map":{"version":3,"sources":["/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js"],"names":["Component","Mix","name","url","App","constructor","props","searchMixCloud","mixSearchTerm","response","fetch","console","log","error","mixLists","mix","map","el","radioStations","state","mixes","componentDidMount","render","searchMixes"],"mappings":";;AACA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,kBACV;AAAA,0BACE;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,G;;AAON,MAAMG,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,cAjBmB,GAiBF,MAAOC,aAAP,IAAyB;AACxC,UAAI;AACF;AACA;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAND,CAME,OAAMI,KAAN,EAAa;AACbF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KA3BkB;;AAAA,SA6BnBC,QA7BmB,GA6BPC,GAAD,IAAS;AAClBA,MAAAA,GAAG,CAACC,GAAJ,CAASC,EAAD,IAAQ;AACd,cAAM;AAACf,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAcc,EAApB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ;AACD,OAHD;AAID,KAlCkB;;AAEjB,QAAIC,aAAa,GAAG,CAClB,SADkB,EAElB,eAFkB,EAGlB,OAHkB,EAIlB,iBAJkB,CAApB;AAMA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,cAAL,CAAoB,UAApB;AACD;;AAuBDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,MAAM,EAAE,KAAKI,WAAlC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,KAAK,CAACJ,GAAN,CAAUD,GAAG,iBACZ,QAAC,GAAD,OAASA;AAAT;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlDyB;;AAqD5B,eAAeX,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\n\nconst Mix = ({name, url}) => (\n  <div>\n    <h2>{name}</h2>\n    <p>{url}</p>\n  </div>\n)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let radioStations = [\n      \"balamii\",\n      \"CashmereRadio\",\n      \"dazed\",\n      \"hotelradioparis\",\n    ];\n    this.state = {\n      mixes: []\n    }\n  }\n\n  componentDidMount() {\n    this.searchMixCloud(\"ntsradio\")\n  }\n\n  searchMixCloud = async (mixSearchTerm) => {\n    try {\n      // const response = await fetch(`https://api.mixcloud.com/${mixSearchTerm}/cloudcasts/`)\n      // const { data } = await response.json();\n      // this.mixLists(data)\n      const response = await fetch('https://api.are.na/v2/channels/listen-xezr5yu6rnw')\n      console.log(response);\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  mixLists = (mix) => {\n    mix.map((el) => {\n      const {name, url} = el\n      console.log(el)\n    })\n  }\n\n\n\n  render() {\n    const {mixes} = this.state\n    \n    return (\n      <div className=\"App\" onLoad={this.searchMixes}>\n        <h1>Hi</h1>\n        {mixes.map(mix => (\n          <Mix {...mix} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}