{"ast":null,"code":"var _jsxFileName = \"/Users/minihorsey/Sites/Personal/MixClouder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\nimport { GlobalStyle } from \"./styles\";\nimport Header from \"./components/Header\";\nimport DetailPanel from './components/DetailPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stations, setStations] = useState([]);\n  const [selectedMix, setSelectedBook] = useState(null);\n  useEffect(() => {\n    const stationsList = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\"];\n    const nothanks = [\"techno\", \"hardcore\", \"drone\", \"doom\", \"edm\", \"disco\", \"drill\", \"dance\", \"electronic\"];\n\n    const fetchData = async station => {\n      const response = await fetch(`https://api.mixcloud.com/${station}/cloudcasts/`);\n      let {\n        data\n      } = await response.json();\n      data = data.filter(d => {\n        let tags = d.tags.map(d => d.name.toLowerCase());\n\n        for (let i = 0; i < nothanks.length; i++) {\n          if (tags.indexOf(nothanks[i]) !== -1) {\n            return false;\n          }\n\n          return true;\n        }\n      });\n      setStations(stations => [...stations, data]);\n    };\n\n    stationsList.map(station => fetchData(station));\n  }, []);\n\n  const pickMix = mix => {\n    setSelectedBook(mix);\n  }; //console.log(selectedMix)\n  // console.log(`stations: `, stations.flat())\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MixContainer, {\n      pickMix: pickMix,\n      stations: stations.flat()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), selectedMix && /*#__PURE__*/_jsxDEV(DetailPanel, {\n      mix: selectedMix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true); // return <h1>Hi</h1>\n};\n\n_s(App, \"M+6V7jg48lYbmQxo1fInxDad92Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/minihorsey/Sites/Personal/MixClouder/src/App.js"],"names":["React","useState","useEffect","MixContainer","GlobalStyle","Header","DetailPanel","App","stations","setStations","selectedMix","setSelectedBook","stationsList","nothanks","fetchData","station","response","fetch","data","json","filter","d","tags","map","name","toLowerCase","i","length","indexOf","pickMix","mix","flat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,eAAd,IAAiCV,QAAQ,CAAC,IAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAG,CACnB,SADmB,EAEnB,eAFmB,EAGnB,OAHmB,EAInB,iBAJmB,CAArB;AAMA,UAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,KAAxC,EAA+C,OAA/C,EAAwD,OAAxD,EAAiE,OAAjE,EAA0E,YAA1E,CAAjB;;AAEA,UAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACnC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,4BAA2BF,OAAQ,cADV,CAA5B;AAGA,UAAI;AAAEG,QAAAA;AAAF,UAAW,MAAMF,QAAQ,CAACG,IAAT,EAArB;AAEAD,MAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAaC,CAAD,IAAO;AACxB,YAAIC,IAAI,GAAGD,CAAC,CAACC,IAAF,CAAOC,GAAP,CAAYF,CAAD,IAAOA,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAlB,CAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,QAAQ,CAACc,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,cAAIJ,IAAI,CAACM,OAAL,CAAaf,QAAQ,CAACa,CAAD,CAArB,MAA8B,CAAC,CAAnC,EAAsC;AACpC,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AACF,OARM,CAAP;AAUAjB,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcU,IAAd,CAAf,CAAX;AACD,KAjBD;;AAmBAN,IAAAA,YAAY,CAACW,GAAb,CAAkBR,OAAD,IACfD,SAAS,CAACC,OAAD,CADX;AAGD,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,QAAMc,OAAO,GAAIC,GAAD,IAAS;AACvBnB,IAAAA,eAAe,CAACmB,GAAD,CAAf;AACD,GAFD,CArCgB,CAyChB;AAEA;;;AACA,sBACA;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAED,OAAvB;AAAgC,MAAA,QAAQ,EAAErB,QAAQ,CAACuB,IAAT;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGrB,WAAW,iBAAI,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJlB;AAAA,kBADA,CA5CgB,CAoDhB;AACD,CArDD;;GAAMH,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\nimport {GlobalStyle} from \"./styles\"\nimport Header from \"./components/Header\"\nimport DetailPanel from './components/DetailPanel'\n\nconst App = () => {\n  const [stations, setStations] = useState([]);\n  const [selectedMix, setSelectedBook] = useState(null);\n\n  useEffect(() => {\n    const stationsList = [\n      \"balamii\",\n      \"CashmereRadio\",\n      \"dazed\",\n      \"hotelradioparis\",\n    ];\n    const nothanks = [\"techno\", \"hardcore\", \"drone\", \"doom\", \"edm\", \"disco\", \"drill\", \"dance\", \"electronic\"]\n\n    const fetchData = async (station) => {\n      const response = await fetch(\n        `https://api.mixcloud.com/${station}/cloudcasts/`\n      );\n      let { data } = await response.json();\n\n      data = data.filter((d) => {\n        let tags = d.tags.map((d) => d.name.toLowerCase())\n        for (let i = 0; i < nothanks.length; i++) {\n          if (tags.indexOf(nothanks[i]) !== -1) {\n            return false\n          }\n          return true\n        }\n      })\n      \n      setStations((stations) => [...stations, data]);\n    };\n    \n    stationsList.map((station) => (\n      fetchData(station)\n    ))\n  }, []);\n\n  const pickMix = (mix) => {\n    setSelectedBook(mix)\n  }\n\n  //console.log(selectedMix)\n\n  // console.log(`stations: `, stations.flat())\n  return (\n  <>\n    <GlobalStyle />\n    <Header />\n    <MixContainer pickMix={pickMix} stations={stations.flat()} />\n    {selectedMix && <DetailPanel mix={selectedMix} />}\n  </>\n  )\n  // return <h1>Hi</h1>\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}