{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mix = ({\n  name,\n  url\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: url\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Mix;\n\nconst App = () => {\n  _s();\n\n  const [mixes, setMixes] = useState([]);\n  const radioStations = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\", \"ntsradio\"];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://api.mixcloud.com/balamii/cloudcasts/`);\n        const {\n          data\n        } = await response.json();\n        setMixes(data);\n      } catch (error) {\n        console.log(`from the erroy: `, error);\n      }\n    };\n\n    radioStations.map(station => {\n      fetchData(station);\n    });\n  }, []); // setMixes = (mix) => {\n  //   mix.map((el) => {\n  //     const { name, url, pictures, tags, user } = el;\n  //     let tagList = [];\n  //     if (tags.length > 0) {\n  //       tags.map((tag) => {\n  //         tagList.push(tag);\n  //         console.log(tag[\"name\"]);\n  //       });\n  //     }\n  //     this.setState((prevState, props) => ({\n  //       ...prevState,\n  //       mixes: [\n  //         ...prevState.mixes,\n  //         {\n  //           name: name,\n  //           url: url,\n  //           image: pictures[\"640wx640h\"],\n  //           tags: tagList,\n  //           user: user[\"name\"],\n  //         },\n  //       ],\n  //     }));\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(MixContainer, {\n    mixes: mixes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"62cNtn0mEuW0rAzU+PCPuwi+ERw=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mix\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/jonathanhorsman/Sites/Personal/MixClouder/src/App.js"],"names":["React","useState","useEffect","MixContainer","Mix","name","url","App","mixes","setMixes","radioStations","fetchData","response","fetch","data","json","error","console","log","map","station"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACV;AAAA,0BACE;AAAA,cAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,G;;AAON,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,aAAa,GAAG,CACpB,SADoB,EAEpB,eAFoB,EAGpB,OAHoB,EAIpB,iBAJoB,EAKpB,UALoB,CAAtB;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AAEF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CADyB,CAA5B;AAGA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAN,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,OAPD,CAOE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAa,kBAAb,EAAgCF,KAAhC;AACD;AACF,KAXD;;AAaAN,IAAAA,aAAa,CAACS,GAAd,CAAmBC,OAAD,IAAa;AAC7BT,MAAAA,SAAS,CAACS,OAAD,CAAT;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT,CAVgB,CA6BhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEZ;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxDD;;GAAMD,G;;MAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\n\nconst Mix = ({ name, url }) => (\n  <div>\n    <h2>{name}</h2>\n    <p>{url}</p>\n  </div>\n);\n\nconst App = () => {\n  const [mixes, setMixes] = useState([]);\n  const radioStations = [\n    \"balamii\",\n    \"CashmereRadio\",\n    \"dazed\",\n    \"hotelradioparis\",\n    \"ntsradio\",\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        \n        const response = await fetch(\n          `https://api.mixcloud.com/balamii/cloudcasts/`\n        );\n        const { data } = await response.json();\n        setMixes(data);\n      } catch (error) {\n        console.log(`from the erroy: `, error);\n      }\n    };\n\n    radioStations.map((station) => {\n      fetchData(station);\n    });\n  }, []);\n\n  // setMixes = (mix) => {\n  //   mix.map((el) => {\n  //     const { name, url, pictures, tags, user } = el;\n  //     let tagList = [];\n  //     if (tags.length > 0) {\n  //       tags.map((tag) => {\n  //         tagList.push(tag);\n  //         console.log(tag[\"name\"]);\n  //       });\n  //     }\n  //     this.setState((prevState, props) => ({\n  //       ...prevState,\n  //       mixes: [\n  //         ...prevState.mixes,\n  //         {\n  //           name: name,\n  //           url: url,\n  //           image: pictures[\"640wx640h\"],\n  //           tags: tagList,\n  //           user: user[\"name\"],\n  //         },\n  //       ],\n  //     }));\n  //   });\n  // };\n\n  return <MixContainer mixes={mixes} />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}