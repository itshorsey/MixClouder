{"ast":null,"code":"var _jsxFileName = \"/Users/minihorsey/Sites/Personal/MixClouder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\nimport { GlobalStyle } from \"./styles\";\nimport Header from \"./components/Header\";\nimport DetailPanel from './components/DetailPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stations, setStations] = useState([]);\n  const [selectedMix, setSelectedBook] = useState(null);\n  useEffect(() => {\n    const stationsList = [\"balamii\", \"CashmereRadio\", \"dazed\", \"hotelradioparis\"];\n\n    const fetchData = async station => {\n      const response = await fetch(`https://api.mixcloud.com/${station}/cloudcasts/`);\n      const {\n        data\n      } = await response.json();\n      cleanMixes(data); //setStations((stations) => [...stations, data]);\n    };\n\n    stationsList.map(station => fetchData(station));\n\n    const cleanMixes = list => {\n      const nothanks = [\"techno\", \"hardcore\", \"drone\", \"doom\", \"edm\", \"disco\", \"drill\"];\n      list.map(mixItem => {\n        // console.log(mixItem.addToCollection)\n        mixItem.tags.map(tagName => {\n          nothanks.map(nah => {\n            if (tagName.name.toLowerCase() != nah) {\n              mixItem.addToCollection = false; // setStations((stations) => [...stations, mixItem]);\n              //console.log(\"ding ding ding ding\")\n              //return true\n            } else {\n              mixItem.addToCollection = true;\n            }\n          });\n        });\n      });\n    };\n  }, []);\n\n  const pickMix = mix => {\n    setSelectedBook(mix);\n  }; //console.log(selectedMix)\n  // console.log(`stations: `, stations.flat())\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MixContainer, {\n      pickMix: pickMix,\n      stations: stations.flat()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), selectedMix && /*#__PURE__*/_jsxDEV(DetailPanel, {\n      mix: selectedMix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true); // return <h1>Hi</h1>\n};\n\n_s(App, \"M+6V7jg48lYbmQxo1fInxDad92Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/minihorsey/Sites/Personal/MixClouder/src/App.js"],"names":["React","useState","useEffect","MixContainer","GlobalStyle","Header","DetailPanel","App","stations","setStations","selectedMix","setSelectedBook","stationsList","fetchData","station","response","fetch","data","json","cleanMixes","map","list","nothanks","mixItem","tags","tagName","nah","name","toLowerCase","addToCollection","pickMix","mix","flat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,eAAd,IAAiCV,QAAQ,CAAC,IAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAG,CACnB,SADmB,EAEnB,eAFmB,EAGnB,OAHmB,EAInB,iBAJmB,CAArB;;AAOA,UAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACnC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,4BAA2BF,OAAQ,cADV,CAA5B;AAGA,YAAM;AAAEG,QAAAA;AAAF,UAAW,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,UAAU,CAACF,IAAD,CAAV,CALmC,CAMnC;AACD,KAPD;;AASAL,IAAAA,YAAY,CAACQ,GAAb,CAAkBN,OAAD,IACfD,SAAS,CAACC,OAAD,CADX;;AAIA,UAAMK,UAAU,GAAIE,IAAD,IAAU;AAC3B,YAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,KAAxC,EAA+C,OAA/C,EAAwD,OAAxD,CAAjB;AACAD,MAAAA,IAAI,CAACD,GAAL,CAAUG,OAAD,IAAa;AACpB;AAEAA,QAAAA,OAAO,CAACC,IAAR,CAAaJ,GAAb,CAAkBK,OAAD,IAAa;AAC5BH,UAAAA,QAAQ,CAACF,GAAT,CAAcM,GAAD,IAAS;AACpB,gBAAID,OAAO,CAACE,IAAR,CAAaC,WAAb,MAA8BF,GAAlC,EAAuC;AACrCH,cAAAA,OAAO,CAACM,eAAR,GAA0B,KAA1B,CADqC,CAErC;AACA;AACA;AACD,aALD,MAKO;AACLN,cAAAA,OAAO,CAACM,eAAR,GAA0B,IAA1B;AACD;AACF,WATD;AAUD,SAXD;AAYD,OAfD;AAgBD,KAlBD;AAoBD,GAzCQ,EAyCN,EAzCM,CAAT;;AA2CA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACvBpB,IAAAA,eAAe,CAACoB,GAAD,CAAf;AACD,GAFD,CA/CgB,CAmDhB;AAEA;;;AACA,sBACA;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAED,OAAvB;AAAgC,MAAA,QAAQ,EAAEtB,QAAQ,CAACwB,IAAT;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGtB,WAAW,iBAAI,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJlB;AAAA,kBADA,CAtDgB,CA8DhB;AACD,CA/DD;;GAAMH,G;;KAAAA,G;AAiEN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MixContainer from \"./components/MixContainer/\";\nimport {GlobalStyle} from \"./styles\"\nimport Header from \"./components/Header\"\nimport DetailPanel from './components/DetailPanel'\n\nconst App = () => {\n  const [stations, setStations] = useState([]);\n  const [selectedMix, setSelectedBook] = useState(null);\n\n  useEffect(() => {\n    const stationsList = [\n      \"balamii\",\n      \"CashmereRadio\",\n      \"dazed\",\n      \"hotelradioparis\",\n    ];\n\n    const fetchData = async (station) => {\n      const response = await fetch(\n        `https://api.mixcloud.com/${station}/cloudcasts/`\n      );\n      const { data } = await response.json();\n      cleanMixes(data)\n      //setStations((stations) => [...stations, data]);\n    };\n    \n    stationsList.map((station) => (\n      fetchData(station)\n    ))\n\n    const cleanMixes = (list) => {\n      const nothanks = [\"techno\", \"hardcore\", \"drone\", \"doom\", \"edm\", \"disco\", \"drill\"]\n      list.map((mixItem) => {\n        // console.log(mixItem.addToCollection)\n\n        mixItem.tags.map((tagName) => {\n          nothanks.map((nah) => {\n            if (tagName.name.toLowerCase() != nah) {\n              mixItem.addToCollection = false\n              // setStations((stations) => [...stations, mixItem]);\n              //console.log(\"ding ding ding ding\")\n              //return true\n            } else {\n              mixItem.addToCollection = true\n            }\n          })\n        })\n      })\n    }\n\n  }, []);\n\n  const pickMix = (mix) => {\n    setSelectedBook(mix)\n  }\n\n  //console.log(selectedMix)\n\n  // console.log(`stations: `, stations.flat())\n  return (\n  <>\n    <GlobalStyle />\n    <Header />\n    <MixContainer pickMix={pickMix} stations={stations.flat()} />\n    {selectedMix && <DetailPanel mix={selectedMix} />}\n  </>\n  )\n  // return <h1>Hi</h1>\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}